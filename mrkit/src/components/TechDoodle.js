import React, { useEffect, useRef } from 'react';

const techIcons = [
  { 
    svg: `<svg width="1440" height="1024" viewBox="0 0 1440 1024" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_1214_14686)">
<rect width="1440" height="1024" fill="white"/>
<path d="M727.4 615.004C619.848 615.004 622.299 615.004 667.113 511.527V577.471" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M904.557 529.946C884.429 529.192 775.421 528.265 767.533 536.155C756.154 547.537 728.004 626.113 739.274 641.143C815.863 642.602 873.78 644.161 885.108 639.629C890.955 637.29 895.624 630.565 898.228 624.487C900.29 619.673 921.944 546.299 921.944 544.231" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M735.578 640.466C719.386 634.348 702.409 628.968 686.82 620.963" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M689.285 426.88C663.995 509.964 777.142 545.153 807.106 461.615C823.35 416.329 768.699 349.671 712.681 399.703" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M767.701 459.793C768.737 456.993 769.476 455.351 770.056 452.635" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M744.323 459.308C745.41 457.076 745.59 455.074 746.016 452.551" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M811.188 115.919C776.177 113.735 733.214 116.946 698.286 115.199C684.524 114.511 553.837 115.294 548.196 122.584C540.987 131.899 541.874 256.671 547.221 262.145C569.19 262.145 786.175 255.237 827.078 255.237C835.756 248.96 826.03 218.188 832.561 211.657C838.086 206.133 853.316 211.621 860.501 202.09C866.858 193.656 864.863 173 860.103 166.654C850.197 153.446 835.274 164.349 831.362 156.525C827.89 149.582 829.727 134.79 829.727 126.219" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M578.192 144.163C740.794 138.003 727.022 138.036 724.272 141.94C696.478 181.396 655.993 235.827 647.585 235.774C579.576 235.343 570.583 237.544 570.162 236.41C565.272 223.21 569.545 176.836 569.545 159.724" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M680.299 150.639C662.808 181.052 637.41 206.486 617.332 234.596" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M641.743 152.492C626.714 172.246 604.308 198.162 587.418 222.293" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M607.989 151.258C598.185 161.749 588.041 171.862 578.975 182.741" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1157.65 608.212C1157.58 608.087 1157.51 607.959 1157.43 607.832C1161.35 614.777 1165.25 621.72 1168.84 628.762C1177.11 644.922 1185.52 661.047 1193.74 677.223C1197.68 684.975 1201.22 692.837 1204.7 700.705C1205.94 703.507 1207.16 706.32 1208.33 709.139C1208.82 708.334 1209.3 707.525 1209.77 706.717C1211.45 703.619 1213.14 700.507 1214.52 697.328C1216.2 693.469 1217.86 689.602 1219.49 685.726C1222.56 678.479 1226.23 659.829 1229.79 652.709C1231.54 649.23 1233.1 645.708 1234.6 642.16C1236.05 638.732 1237.29 635.26 1238.78 631.839C1240.35 628.25 1241.89 624.661 1243.42 621.063C1243.84 620.078 1244.48 619.083 1244.78 618.072C1245.46 615.772 1246.7 613.81 1248.93 612.108C1249.91 611.365 1251.06 610.808 1252.29 610.433C1252.33 610.071 1252.41 609.718 1252.53 609.375" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1117.05 751.999C1117.33 749.868 1117.69 747.746 1118.15 745.647C1119.02 741.735 1119.93 737.833 1120.76 733.914C1121.12 731.146 1121.38 728.374 1121.84 725.617C1122.28 722.968 1122.93 720.363 1123.6 717.756C1125.61 709.834 1127.75 701.947 1129.73 694.016C1131.77 685.878 1133.74 677.715 1136.1 669.638C1138.53 661.31 1140.97 652.99 1143.36 644.663C1144.61 640.331 1145.85 635.999 1147.08 631.658C1148.01 628.388 1148.95 625.117 1150.1 621.898C1150.94 619.553 1151.84 617.238 1152.89 614.963C1153.11 613.295 1153.9 611.763 1155.09 610.534C1155.72 609.522 1156.47 608.583 1157.43 607.832" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path opacity="0.503384" d="M1248.46 606.534C1246.97 605.167 1287.9 539.885 1289 537.697" stroke="#141414" stroke-width="14" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1206.93 497.434C1206.12 499.082 1205.36 500.787 1204.43 502.368C1204 503.098 1203.56 503.827 1203.11 504.538C1202.54 505.408 1201.94 506.252 1201.32 507.086C1200.7 507.937 1199.97 508.422 1199.12 509.123" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1247.32 603.776C1250.6 609.457 1255.79 609.172 1262.88 602.921C1273.52 593.545 1274.21 579.987 1268.56 574.064" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1106.32 457.483C1124.64 436.593 1147.95 421.216 1179.91 427.37C1269.96 444.711 1252.64 567.117 1163.56 572.63C1091.43 577.097 1064.44 469.079 1122.67 453.94" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M956 229.514C959.264 134.809 1080.2 93.2809 1118.98 187.466C1133.04 221.61 1148.52 251.919 1184.05 267.463C1271.52 305.728 1331.18 116.75 1240.77 122.394C1189.81 125.573 1146.95 179.579 1132.98 195.639" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1087.43 240.392C1047 279.486 956 307.832 956 229.516" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M975.105 226.335C975.105 197.114 1016.02 155.804 1047.94 165.378C1070.38 172.109 1071.18 192.625 1078.98 211.346C1084.73 225.152 1095.58 240.74 1104.65 252.539C1116.93 268.496 1132.75 285.777 1150.62 295.522C1201.49 323.271 1264.38 311.12 1294.5 259.106C1323.15 209.612 1344.23 97.071 1258.74 91.2672C1199.09 87.2188 1152.16 129.867 1116.77 172.515" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1072 216.986C1039.43 248.437 1022.04 253.73 1013.36 254.674C983.715 257.581 975 242.986 975 223.976" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M266.677 481.912C277.672 477.07 272.224 479.559 290.535 470.419C300.615 465.387 313.208 459.439 324.831 462.757C340.648 467.272 364.695 497.484 345.707 511.794C303.365 543.704 234.524 527.141 205.541 580.754C200.535 590.014 198.299 601.867 202.559 612.168C214.67 641.454 285.765 636.871 309.92 634.388C313.831 633.987 334.184 634.025 333.777 624.427C332.133 585.55 249.579 532.156 223.435 506.431C221.314 504.345 193.86 478.66 204.05 468.887C208.571 464.55 229.921 472.302 230.89 472.718C264.384 487.06 354.459 540.095 332.286 587.65C307.537 640.731 179.434 618.174 186.902 691.854C190.089 723.291 240.004 733.217 262.204 739.359C302.418 750.486 384.964 777.852 397.15 713.308C405.577 668.674 384.992 586.676 330.049 584.585C276.572 582.549 229.391 645.715 162.299 628.258C99.0506 611.803 92.869 515.201 125.02 472.718C163.171 422.308 216.136 457.972 260.712 478.848C291.556 493.292 331.262 510.148 329.304 552.404C327.056 600.92 302.131 641.05 274.878 678.828C260.538 698.706 233.669 725.16 231.636 751.618C229.178 783.615 275.3 782 294.262 777.669C315.747 772.763 339.534 758.191 355.398 743.19C387.893 712.467 417.95 659.425 410.57 612.168C401.592 554.677 314.844 500.129 264.44 503.366C245.241 504.599 237.401 514.048 228.654 530.184C208.158 567.989 200.795 611.473 200.323 654.31C200.06 677.996 209.798 703.24 207.778 725.568C206.161 743.418 193.526 747.949 178.701 740.125C122.885 710.669 147.473 591.41 157.079 543.209C159.479 531.173 158.355 512.43 169.754 508.729C181.957 504.769 203.892 545.935 204.05 546.274C225.078 591.347 221.242 720.154 145.15 704.113C86.4269 691.733 137.256 503.211 206.286 514.86C268.616 525.376 310.856 589.285 314.393 650.479C315.164 663.811 312.788 695.15 302.463 707.944C288.826 724.847 237.056 727.325 223.435 709.477C216.643 700.578 211.174 689.967 209.269 678.828C201.512 633.487 243.34 507.894 286.807 487.275C345.215 459.572 379.221 541.05 375.529 586.117C367.465 684.527 231.03 716.309 167.518 652.011C139.01 623.151 135.363 544.672 148.878 507.964C156.099 488.35 169.969 478.837 188.393 471.951C200.785 467.32 234.946 460.226 249.529 463.524C310.77 477.369 382.351 544.678 406.097 604.507C452.132 720.493 226.857 807.136 170.5 713.308C157.182 691.136 157.746 654.55 157.079 630.557C156.786 619.989 153.815 587.27 163.044 574.624C181.54 549.28 242.703 606.034 255.494 613.701C265.96 619.974 276.79 625.895 288.298 629.791C344.308 648.752 349.672 620.649 392.677 609.87C399.908 608.058 418.042 606.592 425.481 606.805C429.884 606.93 442.333 609.205 438.155 610.636C395.61 625.21 327.908 556.691 290.535 544.741C279.259 541.136 267.296 539.787 255.494 539.378C233.097 538.602 215.222 543.56 195.103 553.17C160.554 569.673 151.606 599.97 113.092 586.117" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path opacity="0.500488" d="M531 914C562.887 915.333 594.654 916 626.301 916C673.771 916 711.208 914 721 914" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path opacity="0.500488" d="M720.666 892C727.562 893.561 743.223 909.404 747.383 911.059C751.543 912.714 733.609 931.655 725.376 935" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path opacity="0.500488" d="M510 906C510.667 874.113 511 842.346 511 810.699C511 763.229 510 725.792 510 716" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path opacity="0.500488" d="M489 716.334C490.561 709.438 506.404 693.777 508.059 689.617C509.714 685.457 528.655 703.391 532 711.624" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M542 881L566 870.754C572.543 858.062 577.438 848.125 580.684 840.943C583.93 833.761 587.035 825.996 590 817.65L614 829.044L637.289 787.918L662 824.188L687.116 792.773L710 737" stroke="#141414" stroke-width="16" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M65.2923 325.204C70.2719 237 64.1479 173 64.1484 89.5925C64.2835 86.7466 64.4079 83.9028 64.453 81.0532C64.4718 79.7141 64.5258 78.3722 64.5807 77.0331C64.606 76.3611 64.6134 75.6854 64.6363 75.0105C66.5109 74.8821 68.3986 74.842 70.2723 74.6906C72.4023 74.5199 74.5282 74.3205 76.6549 74.1498C80.9394 73.8027 85.2214 74.1333 89.4961 74.3743C93.8134 74.6203 98.1232 74.7688 102.447 74.8276C106.997 74.8864 111.551 74.9259 116.1 74.8305C124.507 74.6512 158.546 75.0772 160.643 74.9625C162.6 74.8556 164.548 74.7301 166.507 74.6878C170.508 74.6038 394.167 74.601 398.168 74.6935C400.534 74.7466 402.897 74.7638 405.263 74.7609C406.322 74.7609 407.384 74.7351 408.445 74.6992C408.813 74.6863 409.182 74.6619 409.551 74.6376C409.657 75.131 409.747 75.6288 409.849 76.1107C409.992 76.7864 410.109 77.4656 410.222 78.1448C410.646 81.9676 410.603 85.8249 410.389 89.6542C410.15 93.8794 410.054 98.0989 410.047 102.326C410.041 106.252 410.326 110.174 410.351 114.099C410.38 118.478 410.373 122.857 410.376 127.239C410.383 135.535 410.997 210.282 411.285 218.581C411.419 222.492 411.377 226.389 411.253 230.298C410.366 258.802 410.11 288.096 412.822 316.581C413.006 318.545 413.209 321.254 413.111 323.229C411.072 323.425 409.162 323.466 407.243 323.574C404.902 323.706 97.0004 325.211 93.4846 325.443C91.7189 325.561 89.954 325.67 88.1858 325.723" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M175.192 99.2402C172.308 96.4329 169.411 95.0293 166.5 95.0293C162.135 95.0293 156.227 96.8191 156.227 104.331C156.227 111.844 160.463 114.414 164.314 114.414C168.165 114.414 172.273 112.583 173.774 111.247" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M173.66 92C173.993 92.7614 174.268 93.6496 174.486 94.6647C174.703 95.6797 174.938 97.1674 175.188 99.1278C173.506 99.5955 172.323 99.9775 171.638 100.274C170.953 100.57 170.161 101.043 169.262 101.692" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M121.64 111.047C121.66 111.195 123.515 109.845 125.586 108.1C126.608 107.239 128.095 106.116 129.087 105.237C130.376 104.094 131.409 102.986 132.188 101.914C132.188 101.527 128.403 98.1758 128.121 97.9251C127.32 97.2139 123.573 94.2535 123.109 93.8612C122.696 93.5127 122.28 93.1749 121.865 92.8332C121.836 92.8101 121.806 92.7943 121.768 92.7695" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M98.5672 111.047C98.5475 111.195 96.6921 109.845 94.6211 108.1C93.5988 107.239 92.1116 106.116 91.12 105.237C89.8314 104.094 88.7979 102.986 88.0195 101.914C88.0195 101.527 91.8041 98.1758 92.0864 97.9251C92.8872 97.2139 96.6337 94.2535 97.0981 93.8612C97.5106 93.5127 97.9273 93.1749 98.3425 92.8332C98.3705 92.8101 98.4013 92.7943 98.4392 92.7695" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M198.836 109.738C198.903 109.642 198.97 109.546 199.001 109.45C199.051 109.295 199.077 109.14 199.127 108.984C199.174 108.837 199.203 108.689 199.139 108.542C199.077 108.394 198.989 108.247 198.92 108.1C198.837 97 198.998 91.7179 200.3 91.7217C208.333 91.6337 216.367 91.7548 224.402 91.7318C228.823 91.7189 246.725 91.7495 247.828 91.7413C248.857 91.7336 249.881 91.7245 250.912 91.7215C253.016 91.7155 370.644 91.7153 372.748 91.7219C373.993 91.7257 375.235 91.727 376.48 91.7268C377.037 91.7268 377.595 91.7249 378.153 91.7223C378.347 91.7214 378.541 91.7197 378.735 91.7179C378.791 91.7534 378.838 91.7892 378.892 91.8238C378.967 91.8724 379.028 91.9213 379.088 91.9701C379.311 92.2451 379.288 92.5225 379.176 92.7979C379.05 93.1017 378.999 93.4052 378.996 93.7092C378.993 93.9915 379.142 94.2736 379.156 94.5559C379.356 98.7374 379.282 103.225 379.8 107.385C379.848 107.775 379.813 108.165 380.101 108.554C380.239 108.742 380.325 108.93 380.455 109.118C380.552 109.259 380.659 109.454 380.607 109.596C379.535 109.61 378.53 109.613 377.521 109.621C376.29 109.63 214.357 109.739 212.507 109.755C211.579 109.764 210.651 109.772 209.721 109.775" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1008.1 866.338C1049.24 866.391 1096.26 866.093 1149.16 865.443C1228.52 864.468 1329.45 861.986 1329.45 867.247C1329.45 872.509 1329.45 878.167 1329.45 882.924C1329.45 887.68 1329.45 915.366 1329.45 919.812C1329.45 924.258 1329.45 932.135 1329.45 935.649C1329.45 939.162 1320.75 939.162 1298.65 939.162C1276.54 939.162 1009.16 940.591 997.244 939.162C985.33 937.733 988.339 893.822 988.339 889.862C988.339 885.902 988.339 880.568 988.339 877.582" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
<path d="M1273.49 890.14C1274.5 890.128 1275.5 890.17 1276.51 890.182C1277.2 890.19 1277.89 890.179 1278.58 890.187C1279.55 890.198 1290.91 890.283 1292.19 890.245C1293.9 890.193 1294.46 890.13 1296.16 890.069C1297.19 890.032 1297.36 889.979 1298.39 889.95C1299.13 889.929 1299.87 889.91 1300.62 889.935C1301.84 889.976 1304.35 889.751 1305.29 889.935C1305.57 889.989 1303.02 895.132 1299.74 900.873C1298.11 903.707 1295.99 907.829 1294.33 910.578C1292.18 914.15 1290.09 917.014 1288.07 919.172C1287.34 919.172 1281.02 908.681 1280.55 907.899C1279.21 905.679 1273.63 895.294 1272.89 894.007C1272.23 892.863 1271.59 891.708 1270.95 890.558C1270.9 890.48 1270.87 890.395 1270.83 890.289" stroke="#141414" stroke-width="12" stroke-linecap="round" stroke-linejoin="round"/>
</g>
<defs>
<clipPath id="clip0_1214_14686">
<rect width="1440" height="1024" fill="white"/>
</clipPath>
</defs>
</svg>

`,
    label: 'React'
  },
];

class Doodle {
  constructor(x, y, svgString, speed, canvas) {
    this.x = x;
    this.y = y;
    this.svgString = svgString;
    this.speed = speed;
    this.angle = Math.random() * Math.PI * 2;
    this.canvas = canvas;
    this.amplitude = Math.random() * 80 + 30; // Increased amplitude
    this.frequency = Math.random() * 0.015 + 0.005;
    this.startY = y;
    this.startX = x;
    this.time = Math.random() * 1000;
    this.scale = Math.random() * 0.7 + 0.3; // Varied scale between 0.3 and 1
    this.rotation = Math.random() * Math.PI * 2;
    this.rotationSpeed = (Math.random() - 0.5) * 0.03; // Random rotation speed
    this.img = new Image();
    this.img.src = 'data:image/svg+xml;base64,' + btoa(this.svgString);
  }

  update() {
    this.time += this.speed * 0.5;
    this.rotation += this.rotationSpeed;
    
    // More complex floating motion
    this.x = this.startX + 
      Math.cos(this.time * this.frequency) * this.amplitude * 1.5 + 
      Math.sin(this.time * 0.05) * 20;
    
    this.y = this.startY + 
      Math.sin(this.time * this.frequency) * this.amplitude + 
      Math.cos(this.time * 0.07) * 30;

    // Wrap around the screen
    if (this.x > this.canvas.width) this.x = 0;
    if (this.x < 0) this.x = this.canvas.width;
    if (this.y > this.canvas.height) this.y = 0;
    if (this.y < 0) this.y = this.canvas.height;
  }

  draw(ctx) {
    if (this.img.complete) {
      ctx.save();
      ctx.translate(this.x, this.y);
      ctx.rotate(this.rotation);
      ctx.scale(this.scale, this.scale);
      
      // Slight shadow effect
      ctx.shadowColor = 'rgba(0,0,0,0.2)';
      ctx.shadowBlur = 5;
      ctx.shadowOffsetX = 2;
      ctx.shadowOffsetY = 2;
      
      // Increased size for larger SVG rendering
      ctx.drawImage(this.img, -96, -96, 192, 192);
      ctx.restore();
    }
  }
}

export default function TechDoodle() {
  const canvasRef = useRef(null);
  const doodlesRef = useRef([]);
  const animationFrameRef = useRef();

  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext('2d');
    let doodles = [];

    const resizeCanvas = () => {
      canvas.width = window.innerWidth;
      canvas.height = 400; // Increased height
      
      // Recreate doodles on resize
      doodles = [];
      const numDoodles = Math.floor(canvas.width / 80); // More doodles
      
      for (let i = 0; i < numDoodles; i++) {
        const x = Math.random() * canvas.width;
        const y = Math.random() * canvas.height;
        const icon = techIcons[Math.floor(Math.random() * techIcons.length)];
        const speed = Math.random() * 2 + 1;
        doodles.push(new Doodle(x, y, icon.svg, speed, canvas));
      }
      doodlesRef.current = doodles;
    };

    const animate = () => {
      // Create a gradient background
      const gradient = ctx.createLinearGradient(0, 0, 0, canvas.height);
      gradient.addColorStop(0, 'rgba(110, 154, 72, 0.1)');
      gradient.addColorStop(1, 'rgba(110, 154, 72, 0.3)');
      
      ctx.fillStyle = gradient;
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      
      // Slightly blur the background
      ctx.globalAlpha = 0.8;
      
      doodlesRef.current.forEach(doodle => {
        doodle.update();
        doodle.draw(ctx);
      });
      
      animationFrameRef.current = requestAnimationFrame(animate);
    };

    resizeCanvas();
    window.addEventListener('resize', resizeCanvas);
    animate();

    return () => {
      window.removeEventListener('resize', resizeCanvas);
      if (animationFrameRef.current) {
        cancelAnimationFrame(animationFrameRef.current);
      }
    };
  }, []);

  return (
    <canvas
      ref={canvasRef}
      className="absolute top-0 left-0 w-full pointer-events-none"
      style={{ 
        height: '400px', 
        zIndex: -1,
        opacity: 0.7
      }}
    />
  );
}